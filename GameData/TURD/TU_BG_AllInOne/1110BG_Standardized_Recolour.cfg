// OnlyLightMatters: File to enable the Recolouration to SERENITY parts

//   
//    █████╗ ███████╗██████╗  ██████╗ 
//   ██╔══██╗██╔════╝██╔══██╗██╔═══██╗
//   ███████║█████╗  ██████╔╝██║   ██║
//   ██╔══██║██╔══╝  ██╔══██╗██║   ██║
//   ██║  ██║███████╗██║  ██║╚██████╔╝
//   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝ 

// Nosecones
// SquadExpansion/Serenity/Parts/Aero/

@PART[noseconeTiny,noseconeVS]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = MWNN_Stock_Paint_bgnosecones_BG
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_bgnosecones_BG
	@MATERIAL
	{
		mesh = PropCap_01
		mesh = PropCap_02

		// only red mask is used for the external texture, green for the internal
		vector = _DiffuseNorm,0.70,0.27,0.46
		vector = _MetalNorm,0.99,0.85,0.93
		vector = _SmoothnessNorm,0.99,0.85,0.93

		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Propellers/OLM_copterBlades_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Propellers/OLM_copterBlades_paint
	}
}

// FanShrouds
// SquadExpansion/Serenity/Parts/Aero/

@PART[FanShroud_01]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{

	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
            name = FanShroud_01_Striped_Recolour_BG
  			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = BG Recolour Striped

			EXTRA_INFO
			{
			    textureSet = MWNN_Stock_Paint_FanShrouds_Striped_BG
			}
		}
		VARIANT
		{
			name = FanShroud_01_Plain_Recolour_BG
			primaryColor = #ff0000
			displayName = BG Recolour Plain

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_FanShrouds_Grey_BG
			}
		}
	}
}
@PART[FanShroud_02]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{

	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
            name = FanShroud_02_Striped_Recolour_BG
  			primaryColor = #ff0000
			secondaryColor = #00ff00 
			displayName = BG Recolour Striped

			EXTRA_INFO
			{
			    textureSet = MWNN_Stock_Paint_FanShrouds_Striped_BG
			}
		}
		VARIANT
		{
			name = FanShroud_02_Plain_Recolour_BG
			primaryColor = #ff0000
			displayName = BG Recolour Plain

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_FanShrouds_Grey_BG
			}
		}
	}
}
@PART[FanShroud_03]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{

	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
            name = FanShroud_03_Striped_Recolour_BG
  			primaryColor = #ff0000
			secondaryColor = #00ff00 
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes

			EXTRA_INFO
			{
			    textureSet = MWNN_Stock_Paint_FanShrouds_Striped_BG
			}
		}
		VARIANT
		{
			name = FanShroud_03_Plain_Recolour_BG
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			primaryColor = #ff0000

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_FanShrouds_Grey_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_FanShrouds_Striped_BG
	@MATERIAL
	{
		mesh = Shroud

		vector = _DiffuseNorm,0.53,0.64,0.74
		vector = _MetalNorm,0.87,0.61,0.43
		vector = _SmoothnessNorm,0.87,0.61,0.43
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Aero/OLM_BGshrouds-striped_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Aero/OLM_BGshrouds-striped_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_FanShrouds_Grey_BG
	@MATERIAL
	{
		mesh = Shroud

		vector = _DiffuseNorm,0.53,0.64,0.74
		vector = _MetalNorm,0.87,0.61,0.43
		vector = _SmoothnessNorm,0.87,0.61,0.43

		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Aero/OLM_BGshrouds-plain_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Aero/OLM_BGshrouds-plain_paint
	}
}



//         ███████╗ ██████╗██╗███████╗███╗   ██╗ ██████╗███████╗
//         ██╔════╝██╔════╝██║██╔════╝████╗  ██║██╔════╝██╔════╝
//         ███████╗██║     ██║█████╗  ██╔██╗ ██║██║     █████╗  
//         ╚════██║██║     ██║██╔══╝  ██║╚██╗██║██║     ██╔══╝  
//         ███████║╚██████╗██║███████╗██║ ╚████║╚██████╗███████╗
//         ╚══════╝ ╚═════╝╚═╝╚══════╝╚═╝  ╚═══╝ ╚═════╝╚══════╝
  


// Robotic Arms - Science
// CRSY Light Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S1]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = MWNN_Stock_Paint_RobotArmScanner_S1_common_BG
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = MWNN_Stock_Paint_RobotArmScanner_S1_Arm_BG
	}	
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_RobotArmScanner_S1_common_BG
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001

		vector = _DiffuseNorm,0.71,0.71,0.42
		vector = _MetalNorm,0.92,0.89,0.63
		vector = _SmoothnessNorm,0.92,0.89,0.63

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_RobotArmScanner_S1_Arm_BG
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm
		mesh = UpperArm
		mesh = InstrumentHousing

		vector = _DiffuseNorm,0.53,0.64,0.74
		vector = _MetalNorm,0.93,0.89,0.65
		vector = _SmoothnessNorm,0.93,0.89,0.65

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_SmallArm_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_SmallArm_paint
	}	
}


// Robotic Arms - Science
// SPRT Medium Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S2]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = MWNN_Stock_Paint_RobotArmScanner_S2_common_BG
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = MWNN_Stock_Paint_RobotArmScanner_S2_Arm_BG
	}	
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_RobotArmScanner_S2_common_BG
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm		
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001
		mesh = LAOCIS_Mount
		mesh = LAOCIS
		mesh = Mount_001

		vector = _DiffuseNorm,0.71,0.71,0.42
		vector = _MetalNorm,0.92,0.89,0.63
		vector = _SmoothnessNorm,0.92,0.89,0.63

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_RobotArmScanner_S2_Arm_BG
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm_001		
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = InstrumentHousing_001

		vector = _DiffuseNorm,0.71,0.16,0.52
		vector = _MetalNorm,0.09,0.16,0.28
		vector = _SmoothnessNorm,0.09,0.16,0.28
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_ROCArm_2_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_ROCArm_2_paint
	}	
}



// Robotic Arms - Science
// SPRT Large Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S3]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = MWNN_Stock_Paint_RobotArmScanner_S3_common_BG
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = MWNN_Stock_Paint_RobotArmScanner_S3_Arm_BG
	}	
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_RobotArmScanner_S3_common_BG
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = DrillBase
		mesh = DrillPipe
		mesh = DrillHead
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount
		mesh = LAOCIS_Mount
		mesh = LAOCIS

		vector = _DiffuseNorm,0.71,0.71,0.42
		vector = _MetalNorm,0.92,0.89,0.63
		vector = _SmoothnessNorm,0.92,0.89,0.63

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_RobotArmScanner_S3_Arm_BG
	@MATERIAL
	{
		mesh = BaseRotator_001
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = Mount_001

		vector = _DiffuseNorm,0.68,0.18,0.45
		vector = _MetalNorm,0.96,0.65,0.69
		vector = _SmoothnessNorm,0.96,0.65,0.69

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_ROCArm_3_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_ROCArm_3_paint
	}	
}


//       ███████╗████████╗██████╗ ██╗   ██╗ ██████╗████████╗██╗   ██╗██████╗  █████╗ ██╗     
//       ██╔════╝╚══██╔══╝██╔══██╗██║   ██║██╔════╝╚══██╔══╝██║   ██║██╔══██╗██╔══██╗██║     
//       ███████╗   ██║   ██████╔╝██║   ██║██║        ██║   ██║   ██║██████╔╝███████║██║     
//       ╚════██║   ██║   ██╔══██╗██║   ██║██║        ██║   ██║   ██║██╔══██╗██╔══██║██║     
//       ███████║   ██║   ██║  ██║╚██████╔╝╚██████╗   ██║   ╚██████╔╝██║  ██║██║  ██║███████╗
//       ╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝
                                                                                    

// Grip pads - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripPad,mGripPad,sGripPad]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Square]
		{
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_GripPads_BG
			}
		}
		@VARIANT[Round]
		{
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_GripPads_BG
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_GripPads_BG
	@MATERIAL
	{
		mesh = round
		mesh = square

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}



// Grip Strips - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripStrip,sGripStrip]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		currentTextureSet = MWNN_Stock_Paint_GripStrip
		textureSet = MWNN_Stock_Paint_GripStrip
	}

}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_GripStrip
	@MATERIAL
	{
		mesh = gripStrip

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}



//      ██████╗  ██████╗ ██████╗  ██████╗ ████████╗██╗ ██████╗███████╗
//      ██╔══██╗██╔═══██╗██╔══██╗██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
//      ██████╔╝██║   ██║██████╔╝██║   ██║   ██║   ██║██║     ███████╗
//      ██╔══██╗██║   ██║██╔══██╗██║   ██║   ██║   ██║██║     ╚════██║
//      ██║  ██║╚██████╔╝██████╔╝╚██████╔╝   ██║   ██║╚██████╗███████║
//      ╚═╝  ╚═╝ ╚═════╝ ╚═════╝  ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝




// KAL-1000 Controller
// controller1000 - SquadExpansion/Serenity/Parts/Robotics/Controllers
@PART[controller1000]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		currentTextureSet = MWNN_Stock_Paint_KAL-1000
		textureSet = MWNN_Stock_Paint_KAL-1000
	}

}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_KAL-1000
	@MATERIAL
	{
		mesh = controller
		mesh = indicator

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// PISTONS 
@PART[piston_01,piston_02,piston_03,piston_04]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	// variant contains spaces, cannot see another way to blow squad's work and redo it
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseThemeName = Gray with Stripes
		useMultipleDragCubes = false
		baseVariant = GrayWithStripes

		VARIANT
		{
			name = GrayWithStripes
			primaryColor = #999999
			secondaryColor = #4b7c9a	
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes
			
			GAMEOBJECTS
			{
				PistonStripes = true
			}				
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Pistons_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			primaryColor = #999999
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray

			GAMEOBJECTS
			{
				PistonStripes = false
			}				
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Pistons_Gray
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Pistons_GrayWithStripes
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Pistons_Gray
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// HINGE Small G-00 Hinge
@PART[hinge_01_s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = MWNN_Stock_Paint_Hinge01s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge01s_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray with Stripes
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge01s_Gray
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge01s_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-00_Color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge01s_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// HINGE Small G-00 Hinge
@PART[hinge_01]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = MWNN_Stock_Paint_Hinge01_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge01_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge01_Gray
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge01_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_Color 
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge01_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// G-12L Alligator Hinge
@PART[hinge_03]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = MWNN_Stock_Paint_Hinge03_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge03_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge03_Gray
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge03_GrayWithStripes
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge03_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// G-01L Alligator Hinge
@PART[hinge_03_s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = MWNN_Stock_Paint_Hinge03s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = MWNN_Stock_Paint_Hinge03s_GrayWithStripes_TopBase
				textureSet1 = MWNN_Stock_Paint_Hinge03s_GrayWithStripes_Other
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge03s_Gray
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge03s_GrayWithStripes_TopBase
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03-s_diffuse_Color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge03s_GrayWithStripes_Other
	@MATERIAL
	{
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge03s_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// G-32W Hinge
@PART[hinge_04]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #915934
			//currentTextureSet = MWNN_Stock_Paint_Hinge04_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge04_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Hinge04_Gray
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge04_GrayWithStripes
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Hinge04_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// Servos
@PART[rotoServo_00,rotoServo_02,rotoServo_03,rotoServo_04]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #b08b39
			secondaryColor = #4b7c9a
			//currentTextureSet = MWNN_Stock_Paint_rotoServos_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_rotoServos_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_rotoServos_Gray
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_rotoServos_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_rotoServos_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}




// ROTORS
@PART[rotor_01,rotor_01s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = MWNN_Stock_Paint_Rotors01_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = MWNN_Stock_Paint_Rotors01_GrayWithStripes_Rotor
				textureSet1 = MWNN_Stock_Paint_Rotors01_GrayWithStripes_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = MWNN_Stock_Paint_Rotors01_Gray_Rotor
				textureSet1 = MWNN_Stock_Paint_Rotors01_Gray_Base001
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotors01_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotors01_GrayWithStripes_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotors01_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotors01_Gray_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

@PART[rotor_02]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = MWNN_Stock_Paint_Rotor02_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = MWNN_Stock_Paint_Rotor02_GrayWithStripes_Rotor
				textureSet1 = MWNN_Stock_Paint_Rotor02_GrayWithStripes_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = MWNN_Stock_Paint_Rotor02_Gray_Rotor
				textureSet1 = MWNN_Stock_Paint_Rotor02_Gray_Base001
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotor02_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotor02_GrayWithStripes_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotor02_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotor02_Gray_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


@PART[rotor_02s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = MWNN_Stock_Paint_Rotor02s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = MWNN_Stock_Paint_Rotor02s_GrayWithStripes_Rotor
				textureSet1 = MWNN_Stock_Paint_Rotor02s_GrayWithStripes_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = MWNN_Stock_Paint_Rotor02s_Gray_Rotor
				textureSet1 = MWNN_Stock_Paint_Rotor02s_Gray_Base001
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotor02s_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotor02s_GrayWithStripes_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotor02s_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotor02s_Gray_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


@PART[rotor_03,rotor_03s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #915934
			//currentTextureSet = MWNN_Stock_Paint_Rotors03_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Rotors03_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Paint_Rotors03_Gray
			}
		}
	}


}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotors03_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Rotors03_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// R121 Turboshaft Engine
@PART[RotorEngine_02]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		currentTextureSet = MWNN_Stock_Paint_RotorEngine_02
		textureSet = MWNN_Stock_Paint_RotorEngine_02
	}

}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_RotorEngine_02
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_02_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// R7000 Turboshaft Engine
@PART[RotorEngine_03]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = MWNN_Stock_Paint_RotorEngine_03
	}

}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_RotorEngine_03
	@MATERIAL
	{
		mesh = RotorEngine_03
		mesh = Rotor
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// FAN BLADES

@PART[largeFanBlade,mediumFanBlade,smallFanBlade]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = MWNN_Stock_Paint_FanBlades
	}

}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_FanBlades
	@MATERIAL
	{
		mesh = mount
		mesh = Fan
		mesh = bladeFlipped
		mesh = blade
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/fan_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


@PART[largeHeliBlade,mediumHeliBlade,smallHeliBlade]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = MWNN_Stock_Paint_HeliBlades
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_HeliBlades
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade

		vector = _DiffuseNorm,0.62,0.26,0.49
		vector = _MetalNorm,0.78,0.62,0.75
		vector = _SmoothnessNorm,0.78,0.62,0.75
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Propellers/copterBlades_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Propellers/copterBlades_paint
	}
}


@PART[largePropeller,mediumPropeller,smallPropeller]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = MWNN_Stock_Paint_Propellers
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = MWNN_Stock_Paint_Propellers
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/blade_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


