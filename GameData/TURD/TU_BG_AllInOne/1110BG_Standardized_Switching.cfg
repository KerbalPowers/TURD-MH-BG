// OnlyLightMatters: File to enable the texture switching for SERENITY



// AERO
// Nosecones
// SquadExpansion/Serenity/Parts/Aero/



@PART[noseconeTiny,noseconeVS]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_bgnosecones
		textureSet = Stock_Default_bgnosecones
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_bgnosecones
	@MATERIAL
	{
		mesh = PropCap_01
		mesh = PropCap_02
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// FanShrouds
// SquadExpansion/Serenity/Parts/Aero/

@PART[FanShroud_01]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
    !MODULE[ModulePartVariants],*{}
	MODULE
	{
	    name = ModulePartVariants
	    baseVariant = GrayStripes
	    useMultipleDragCubes = false
		baseThemeName = Gray with Stripes
		baseDisplayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes		

		VARIANT
		{
            name = GrayStripes
  			primaryColor = #999999
			secondaryColor = #4b7c9a
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes

			EXTRA_INFO
			{
			    textureSet = Stock_Default_FanShrouds_Striped
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_FanShrouds_Grey
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
@PART[FanShroud_02]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
    !MODULE[ModulePartVariants],*{}
	MODULE
	{
	    name = ModulePartVariants
	    baseVariant = GrayStripes
	    useMultipleDragCubes = false
		baseThemeName = Gray with Stripes
		baseDisplayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes		

		VARIANT
		{
            name = GrayStripes
  			primaryColor = #999999
			secondaryColor = #b08b39 
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes

			EXTRA_INFO
			{
			    textureSet = Stock_Default_FanShrouds_Striped
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_FanShrouds_Grey
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
@PART[FanShroud_03]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
    !MODULE[ModulePartVariants],*{}
	MODULE
	{
	    name = ModulePartVariants
	    baseVariant = GrayStripes
	    useMultipleDragCubes = false
		baseThemeName = Gray with Stripes
		baseDisplayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes		

		VARIANT
		{
            name = GrayStripes
  			primaryColor = #999999
			secondaryColor = #915934 
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes

			EXTRA_INFO
			{
			    textureSet = Stock_Default_FanShrouds_Striped
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_FanShrouds_Grey
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FanShrouds_Striped
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FanShrouds_Grey
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// Robotic Arms - Science
// CRSY Light Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Instruments
		currentTextureSet = Stock_Default_RobotArmScanner_S1_common
		textureSet = Stock_Default_RobotArmScanner_S1_common
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Arm
		currentTextureSet = Stock_Default_RobotArmScanner_S1_Arm
		textureSet = Stock_Default_RobotArmScanner_S1_Arm
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RobotArmScanner_S1_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RobotArmScanner_S1_Arm
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm
		mesh = UpperArm
		mesh = InstrumentHousing
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
}

// Robotic Arms - Science
// SPRT Medium Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Instruments
		currentTextureSet = Stock_Default_RobotArmScanner_S2_common
		textureSet = Stock_Default_RobotArmScanner_S2_common
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Arm
		currentTextureSet = Stock_Default_RobotArmScanner_S2_Arm
		textureSet = Stock_Default_RobotArmScanner_S2_Arm
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RobotArmScanner_S2_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm		
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001
		mesh = LAOCIS_Mount
		mesh = LAOCIS
		mesh = Mount_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RobotArmScanner_S2_Arm
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm_001		
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = InstrumentHousing_001
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
}



// Robotic Arms - Science
// SPRT Medium Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Instruments
		currentTextureSet = Stock_Default_RobotArmScanner_S3_common
		textureSet = Stock_Default_RobotArmScanner_S3_common
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Arm
		currentTextureSet = Stock_Default_RobotArmScanner_S3_Arm
		textureSet = Stock_Default_RobotArmScanner_S3_Arm
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RobotArmScanner_S3_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = DrillBase
		mesh = DrillPipe
		mesh = DrillHead
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount
		mesh = LAOCIS_Mount
		mesh = LAOCIS

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RobotArmScanner_S3_Arm
	@MATERIAL
	{
		mesh = BaseRotator_001
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = Mount_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
}



// Grip pads - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripPad,mGripPad,sGripPad]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Square]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_GripPads
			}
		}
		@VARIANT[Round]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_GripPads
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_GripPads
	@MATERIAL
	{
		mesh = round
		mesh = square

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}



// Grip Strips - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripStrip,sGripStrip]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_GripStrip
		textureSet = Stock_Default_GripStrip
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_GripStrip
	@MATERIAL
	{
		mesh = gripStrip

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// ROBOTICS
// KAL-1000 Controller
// controller1000 - SquadExpansion/Serenity/Parts/Robotics/Controllers
@PART[controller1000]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_KAL-1000
		textureSet = Stock_Default_KAL-1000
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_KAL-1000
	@MATERIAL
	{
		mesh = controller
		mesh = indicator

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// PISTONS 
@PART[piston_01,piston_02,piston_03,piston_04]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	// variant contains spaces, cannot see another way to blow squad's work and redo it
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseThemeName = Gray with Stripes
		useMultipleDragCubes = false
		baseVariant = GrayWithStripes
		
		VARIANT
		{
			name = GrayWithStripes
			primaryColor = #999999
			secondaryColor = #4b7c9a	
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes
			
			GAMEOBJECTS
			{
				PistonStripes = true
			}				
			EXTRA_INFO
			{
				textureSet = Stock_Default_Pistons_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			primaryColor = #999999
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray

			GAMEOBJECTS
			{
				PistonStripes = false
			}				
			EXTRA_INFO
			{
				textureSet = Stock_Default_Pistons_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Pistons_GrayWithStripes
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Pistons_Gray
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// HINGE Small G-00 Hinge
@PART[hinge_01_s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = Stock_Default_Hinge01s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge01s_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray with Stripes
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge01s_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge01s_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-00_Color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge01s_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// HINGE Small G-00 Hinge
@PART[hinge_01]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = Stock_Default_Hinge01_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge01_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge01_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge01_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_Color 
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge01_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// G-12L Alligator Hinge
@PART[hinge_03]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = Stock_Default_Hinge03_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge03_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge03_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge03_GrayWithStripes
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge03_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// G-01L Alligator Hinge
@PART[hinge_03_s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = Stock_Default_Hinge03s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Hinge03s_GrayWithStripes_TopBase
				textureSet1 = Stock_Default_Hinge03s_GrayWithStripes_Other
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge03s_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge03s_GrayWithStripes_TopBase
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03-s_diffuse_Color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge03s_GrayWithStripes_Other
	@MATERIAL
	{
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge03s_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// G-32W Hinge
@PART[hinge_04]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #915934
			//currentTextureSet = Stock_Default_Hinge04_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge04_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge04_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge04_GrayWithStripes
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Hinge04_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// Servos
@PART[rotoServo_00,rotoServo_02,rotoServo_03,rotoServo_04]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #b08b39
			secondaryColor = #4b7c9a
			//currentTextureSet = Stock_Default_rotoServos_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_rotoServos_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_rotoServos_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_rotoServos_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_rotoServos_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}




// ROTORS
@PART[rotor_01,rotor_01s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = Stock_Default_Rotors01_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotors01_GrayWithStripes_Rotor
				textureSet1 = Stock_Default_Rotors01_GrayWithStripes_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotors01_Gray_Rotor
				textureSet1 = Stock_Default_Rotors01_Gray_Base001
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotors01_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotors01_GrayWithStripes_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotors01_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotors01_Gray_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

@PART[rotor_02]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = Stock_Default_Rotor02_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotor02_GrayWithStripes_Rotor
				textureSet1 = Stock_Default_Rotor02_GrayWithStripes_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotor02_Gray_Rotor
				textureSet1 = Stock_Default_Rotor02_Gray_Base001
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotor02_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotor02_GrayWithStripes_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotor02_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotor02_Gray_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


@PART[rotor_02s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = Stock_Default_Rotor02s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotor02s_GrayWithStripes_Rotor
				textureSet1 = Stock_Default_Rotor02s_GrayWithStripes_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotor02s_Gray_Rotor
				textureSet1 = Stock_Default_Rotor02s_Gray_Base001
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotor02s_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotor02s_GrayWithStripes_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotor02s_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotor02s_Gray_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


@PART[rotor_03,rotor_03s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #915934
			//currentTextureSet = Stock_Default_Rotors03_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Rotors03_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Rotors03_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotors03_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rotors03_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// R121 Turboshaft Engine
@PART[RotorEngine_02]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_RotorEngine_02
		textureSet = Stock_Default_RotorEngine_02
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RotorEngine_02
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_02_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// R7000 Turboshaft Engine
@PART[RotorEngine_03]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_RotorEngine_03
		textureSet = Stock_Default_RotorEngine_03
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RotorEngine_03
	@MATERIAL
	{
		mesh = RotorEngine_03
		mesh = Rotor
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

